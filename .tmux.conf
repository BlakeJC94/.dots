#!/bin/bash

######## OPTIONS ########

# enable 256 color support
set -g default-terminal "tmux-256color"

# automatically renumber tmux windows
set -g renumber-windows on

# More responsive ESC
set -sg escape-time 0

# Use login shell (sources bashrc)
set-option -g default-shell "/usr/bin/bash"
set-option -g default-command bash

# Enable undercurls in kitty
set -as terminal-overrides ',*:Smulx=\E[4::%p1%dm'
set -as terminal-overrides ',*:Setulc=\E[58::2::%p1%{65536}%/%d::%p1%{256}%/%{255}%&%d::%p1%{255}%&%d%;m'

# Set vi-mode copy keybinds
set -g status-keys vi
set -g set-clipboard off
set -g mode-keys vi


######## MAPPINGS ########

# Remap tmux leader to C-z
unbind C-b
set -g prefix C-z

# Reload
bind r source-file ~/.tmux.conf \; display-message 'Reloaded tmux config'

# Sessions
bind n new-session
bind Q kill-session
bind Enter choose-tree

# Windows
bind \\ new-window
bind q kill-window
bind Tab last-window
bind BSpace command-prompt "find-window '%%'"
bind Space command-prompt -I "#W" "rename-window '%%'"
bind , previous-window
bind . next-window
bind -r < swap-window -t -1 \; previous-window
bind -r > swap-window -t +1 \; next-window

# Panes/splits
bind | split-window -h -c "#{pane_current_path}"
bind _ split-window -v -c "#{pane_current_path}"
bind \; next-layout
bind w display-panes
is_vim="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
# select-pane
bind -n 'C-Left'  if-shell "$is_vim" 'send-keys C-Left'  { if -F '#{pane_at_left}'   '' 'select-pane -L' }
bind -n 'C-Down'  if-shell "$is_vim" 'send-keys C-Down'  { if -F '#{pane_at_bottom}' '' 'select-pane -D' }
bind -n 'C-Up'    if-shell "$is_vim" 'send-keys C-Up'    { if -F '#{pane_at_top}'    '' 'select-pane -U' }
bind -n 'C-Right' if-shell "$is_vim" 'send-keys C-Right' { if -F '#{pane_at_right}'  '' 'select-pane -R' }
bind -T copy-mode-vi 'C-Left'  if -F '#{pane_at_left}'   '' 'select-pane -L'
bind -T copy-mode-vi 'C-Down'  if -F '#{pane_at_bottom}' '' 'select-pane -D'
bind -T copy-mode-vi 'C-Up'    if -F '#{pane_at_top}'    '' 'select-pane -U'
bind -T copy-mode-vi 'C-Right' if -F '#{pane_at_right}'  '' 'select-pane -R'
# resize-pane
bind -n 'S-Left'  if-shell "$is_vim" 'send-keys S-Left'  'resize-pane -L 8'
bind -n 'S-Down'  if-shell "$is_vim" 'send-keys S-Down'  'resize-pane -D 8'
bind -n 'S-Up'    if-shell "$is_vim" 'send-keys S-Up'    'resize-pane -U 8'
bind -n 'S-Right' if-shell "$is_vim" 'send-keys S-Right' 'resize-pane -R 8'
bind -T copy-mode-vi S-Left  resize-pane -L 8
bind -T copy-mode-vi S-Down  resize-pane -D 8
bind -T copy-mode-vi S-Up    resize-pane -U 8
bind -T copy-mode-vi S-Right resize-pane -R 8
# swap-pane
bind Left  select-pane -L \; swap-pane -s '!'
bind Down  select-pane -D \; swap-pane -s '!'
bind Up    select-pane -U \; swap-pane -s '!'
bind Right select-pane -R \; swap-pane -s '!'
bind -T copy-mode-vi Left  select-pane -L \; swap-pane -s '!'
bind -T copy-mode-vi Down  select-pane -D \; swap-pane -s '!'
bind -T copy-mode-vi Up    select-pane -U \; swap-pane -s '!'
bind -T copy-mode-vi Right select-pane -R \; swap-pane -s '!'
# break and join panes
bind b break-pane
bind j choose-window "join-pane -v -s '%%'"
bind J choose-window "join-pane -h -s '%%'"

# Mode
bind Escape copy-mode
bind -T copy-mode-vi i send -X cancel
bind -T copy-mode-vi v send -X begin-selection
bind -T copy-mode-vi y send -X copy-pipe-and-cancel 'xclip -in -selection clipboard'


######## THEME #######
source ~/.tmux_gruvbox.sh
# set status-right " #{pane_index} "
